{"version":3,"sources":["components/Header.js","components/Footer.js","components/Menu.js","pages/About.js","components/LinkBoxes.js","pages/boardGames/BoardGamesIndex.js","pages/boardGames/BoardGamesDetails.js","pages/digitalGames/DigitalGamesIndex.js","pages/digitalGames/DigitalGamesUtils.js","pages/digitalGames/Numbers/NumbersGame.js","pages/digitalGames/Numbers/Numbers.js","pages/digitalGames/OnlyConnect/OnlyConnectTimer.js","pages/digitalGames/OnlyConnect/OnlyConnectGrid.js","pages/digitalGames/OnlyConnect/OnlyConnectGame.js","pages/digitalGames/OnlyConnect/OnlyConnectApp.js","pages/digitalGames/OnlyConnect/OnlyConnect.js","pages/digitalGames/PocketHexes/Hexagon.js","pages/digitalGames/PocketHexes/PocketHexesGame.js","pages/digitalGames/PocketHexes/PocketHexes.js","pages/digitalGames/DigitalGamesDetails.js","pages/Contact.js","App.js","index.js","assets/Pyxis.jpg","assets/Background.jpeg","assets/profilePhoto.jpg","assets/Herakles.jpg","assets/TheVinylAge.jpg","assets/InternsOfHades.jpeg","assets/RulesInc.jpg","pages/boardGames/Herakles.md","pages/boardGames/TheVinylAge.md","pages/boardGames/Pyxis.md","pages/boardGames/RulesInc.md","pages/boardGames/InternsOfHades.md","pages/digitalGames/Numbers/Numbers.md","pages/digitalGames/OnlyConnect/OnlyConnect.md","pages/digitalGames/PocketHexes/PocketHexes.md"],"names":["backgroundStyle","backgroundImage","Background","backgroundSize","backgroundPosition","Header","style","className","footerStyle","height","backgroundColor","color","fontWeight","flexShrink","display","alignItems","justifyContent","Footer","Menu","useState","open","setOpen","onClick","to","About","src","profilePhoto","alt","href","LinkBoxes","props","links","map","link","image","url","name","games","PyxisImage","HeraklesImage","TheVinylAgeImage","RulesIncImage","InternsOfHadesImage","BoardGamesIndex","BoardGamesDetails","useParams","defaultMarkdown","markdown","setMarkdown","markdownPages","HeraklesMarkdown","TheVinylAgeMarkdown","RulesIncMarkdown","InternsOfHadesMarkdown","PyxisMarkdown","fetch","then","res","text","source","DigitalGamesIndex","randomInteger","max","min","multiple","range","multipleRange","Math","floor","multipleLowerLimit","random","ceil","shuffleArray","array","counter","length","index","element","splice","push","arraysMatch","arr1","arr2","sort","i","NumbersGame","restartGame","target","numbersArray","includes","upcomingNumbers","setState","numbers","score","movesRemaining","highlightedOperation","highlightedIndex","errorMessage","scoreMessage","gameOver","operations","makeMove","clickedIndex","firstNumber","state","secondNumber","createdNumber","performOperation","newNumbersArray","pickNewRandomNumber","updateTarget","endGame","newNumber","pop","refillUpcomingArray","Number","newTarget","this","operation","number","key","handleNumberClick","highlighted","smalltext","handleOperationClick","handleCancelClick","show","React","Component","Numbers","NumbersMarkdown","OnlyConnectTimer","expiredCallback","forceend","timeTaken","setTimeTaken","callbackCalled","setCallbackCalled","timeUsedPercentage","toString","timerBarStyle","width","useEffect","setTimeout","OnlyConnectGrid","correctAnswers","remainingAnswers","highlightedAnswers","boxClickHandler","allAnswers","concat","answerGrid","slice","rowsCorrect","id","rowscorrect","row","rowIndex","solved","boxText","columnIndex","OnlyConnectGame","answer","solvedAnswers","indexOf","highlightedAnswerIndex","checkAnswers","message","timerExpires","pointsString","revealAnswers","unsolvedAnswers","answers","flat","answerList","findAndPopMatchingAnswer","moveHighlightedBoxesToSolved","answerIndex","OnlyConnectApp","content","puzzle","setPuzzle","testPuzzle","buttonClick","OnlyConnect","OnlyConnectMarkdown","Hexagon","hex","hexstate","value","viewBox","points","hexStates","PocketHexesGame","scoredThisRound","diceToPick","diceRolls","generateDiceRolls","selectedDice","grid","createGrid","createRow","centerHex","rowNumber","startIndex","createHex","spendDice","updateHexes","valueToPlace","hexIndex","updateHexForPlacable","undefined","updateHexForScorable","adjList","getAdjacentHexes","highestAdjValue","getHighestAdjValue","adjHexes","adjHex","targetHex","sameRow","sameRowHex","rowAbove","rowAboveHex","rowBelow","rowBelowHex","parseInt","diceList","newDiceRolls","diceMax","diceResult","jndex","handleSelectHex","roll","handleSelectDice","rollDice","PocketHexes","PocketHexesMarkdown","DigitalGamesDetails","pages","Contact","App","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.79863bdc.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport Background from \"../assets/Background.jpeg\"\n\nconst backgroundStyle = {\n  backgroundImage: `url(${Background})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'left'\n}\n\nfunction Header() {\n  return (\n    <header>\n      <div style={backgroundStyle} className=\"header-content\">\n        <p className=\"header-title\">\n          Game Design Portfolio\n        </p>\n        <p className=\"header-subtitle\">\n          By Philip Tootill\n        </p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst footerStyle = {\n  height: '50px',\n  backgroundColor: '#737373',\n  color: 'white',\n  fontWeight: 'bold',\n  flexShrink: '0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}\n\nfunction Footer() {\n  return (\n    <footer style={footerStyle}>\n      <p>\n        Designed by Philip Tootill\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, {useState} from 'react';\nimport './Menu.css';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nfunction Menu() {\n  const [open, setOpen] = useState(false);\n\n  return(\n    <div className=\"menu\">\n      <button onClick={function() {setOpen(!open)}} className=\"menu-button\">\n        <MenuIcon/>\n      </button>\n      <ul className=\"menu-list\" open={open}>\n        <li className=\"menu-list-item\">\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li className=\"menu-list-item\">\n          <Link to=\"/board-games\">Board Games</Link>\n        </li>\n        <li className=\"menu-list-item\">\n          <Link to=\"/digital-games\">Digital Games</Link>\n        </li>\n        <li className=\"menu-list-item\">\n          <Link to=\"/contact\">Contact</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport './Page.css';\nimport profilePhoto from '../assets/profilePhoto.jpg'\n\nfunction About() {\n  return (\n    <div className=\"page-content\">\n      <p className=\"page-title\">About</p>\n      <div className=\"page-section\">\n        <img src={profilePhoto} alt=\"The author\"/>\n        <p>\n          I'm an Oxford based software developer and amateur game designer. \n          I made this site using React to showcase my game designs. \n          The code for the site is available <a href=\"https://github.com/PhilipTootill/HomePage\">here</a>.\n        </p>\n        <p>\n          I started designing games in 2014, after seeing Matt Leacock give a talk about game design at the UK Games Expo.\n          Since then, I've worked on a range of different games, and had one game published: Labyrinth, as part of the collection <a href=\"https://jellybean.games/the-lady-and-the-tiger/\">The Lady and the Tiger</a>.\n        </p>\n        <p>\n          Under \"Board Games\", you'll find summaries of the projects I'm most proud of, and sell sheets for the games which are in a pitchable condition.\n        </p>\n        <p>\n          I also have a handful of digital prototypes, under \"Digital Games\".\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\n\nfunction LinkBoxes(props) {\n  return (\n    <div className=\"link-boxes\">\n      {\n        props.links.map((link) =>\n          <div className=\"link-box\" style={{backgroundImage: `url(${link.image})`}}>\n            <Link to={link.url}>\n              <div className=\"link-box-overlay\">{link.name}</div>\n            </Link>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default LinkBoxes;\n","import React from 'react';\nimport HeraklesImage from '../../assets/Herakles.jpg';\nimport PyxisImage from '../../assets/Pyxis.jpg';\nimport TheVinylAgeImage from '../../assets/TheVinylAge.jpg';\nimport InternsOfHadesImage from '../../assets/InternsOfHades.jpeg';\nimport RulesIncImage from '../../assets/RulesInc.jpg';\nimport LinkBoxes from '../../components/LinkBoxes';\n\nconst games = [\n  {\n    \"name\": \"Pyxis\",\n    \"image\": PyxisImage,\n    \"url\": \"/board-games/pyxis\"\n  },\n  {\n    \"name\": \"Herakles\",\n    \"image\": HeraklesImage,\n    \"url\": \"/board-games/herakles\"\n  },\n  {\n    \"name\": \"The Vinyl Age\",\n    \"image\": TheVinylAgeImage,\n    \"url\": \"/board-games/the-vinyl-age\"\n  },\n  {\n    \"name\": \"Rules Inc.\",\n    \"image\": RulesIncImage,\n    \"url\": \"/board-games/rules-inc\"\n  },\n  {\n    \"name\": \"Interns Of Hades\",\n    \"image\": InternsOfHadesImage,\n    \"url\": \"/board-games/interns-of-hades\"\n  }\n]\n\nfunction BoardGamesIndex() {\n  return (\n    <div className=\"page-content\">\n      <p className=\"page-title\">Board Games</p>\n      <LinkBoxes links={games}/>\n    </div>\n  );\n}\n\nexport default BoardGamesIndex;\n","import React, {useState} from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport HeraklesMarkdown from \"./Herakles.md\";\nimport TheVinylAgeMarkdown from \"./TheVinylAge.md\";\nimport PyxisMarkdown from \"./Pyxis.md\";\nimport RulesIncMarkdown from \"./RulesInc.md\";\nimport InternsOfHadesMarkdown from \"./InternsOfHades.md\";\nimport {\n  useParams\n} from \"react-router-dom\";\n\nfunction BoardGamesDetails() {\n  let { name } = useParams();\n\n  const defaultMarkdown = \"Invalid URL: The page for \" + name + \" doesn't exist.\";\n  const [markdown, setMarkdown] = useState(defaultMarkdown);\n\n  const markdownPages = {\n    \"herakles\": HeraklesMarkdown,\n    \"the-vinyl-age\": TheVinylAgeMarkdown,\n    \"rules-inc\": RulesIncMarkdown,\n    \"interns-of-hades\": InternsOfHadesMarkdown,\n    \"pyxis\": PyxisMarkdown\n  } \n\n  if (markdownPages[name] != null) {\n    fetch(markdownPages[name]).then(res => res.text()).then(text => setMarkdown(text));\n  }\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"page-section\">\n        <ReactMarkdown source={markdown} />\n      </div>\n    </div>\n  );\n}\n\nexport default BoardGamesDetails;\n","import React from 'react';\nimport PyxisImage from '../../assets/Pyxis.jpg';\nimport LinkBoxes from '../../components/LinkBoxes';\n\nconst games = [\n  {\n    \"name\": \"Numbers\",\n    \"image\": PyxisImage,\n    \"url\": \"/digital-games/numbers\"\n  },\n  {\n    \"name\": \"Pocket Hexes\",\n    \"image\": PyxisImage,\n    \"url\": \"/digital-games/pocket-hexes\"\n  },\n  {\n    \"name\": \"Only Connect Grid\",\n    \"image\": PyxisImage,\n    \"url\": \"/digital-games/only-connect\"\n  }\n]\n\nfunction DigitalGamesIndex() {\n  return (\n    <div className=\"page-content\">\n      <p className=\"page-title\">Digital Games</p>\n      <LinkBoxes links={games}/>\n    </div>\n  );\n}\n\nexport default DigitalGamesIndex;\n","/*\n * Return a random multiple of an integer, between a given minimum or maximum.\n */\nexport const randomInteger = function(max, min, multiple) {\n    var range = max - min + 1;\n    var multipleRange = Math.floor(range / multiple);\n    var multipleLowerLimit = Math.floor(min / multiple) - 1;\n\n    var random = Math.random(); //Between 0 and 1.\n    random = random * multipleRange; // Between 0 and multipleRange.\n    random = Math.ceil(random); //Integer between 1 and multipleRange\n    random = random + multipleLowerLimit;\n    random = random * multiple; //Definitely a multiple.\n\n    return random;\n}\n\n\nexport const shuffleArray = function(array) {\n    var counter = array.length;\n\n    while(counter > 0) {\n        var index = Math.floor(Math.random() * counter);\n        counter--;\n\n        var element = array.splice(index, 1);\n        array.push(element[0]);\n    }\n}\n\nexport const arraysMatch = function(arr1, arr2) {\n    arr1.sort();\n    arr2.sort();\n\n    // Check if the arrays are the same length\n    if (arr1.length !== arr2.length) return false;\n\n    // Check if all items exist and are in the same order\n    for (var i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n\n    return true;\n}","import React from 'react';\nimport './Numbers.css';\nimport { randomInteger, shuffleArray } from '../DigitalGamesUtils';\n\n\nclass NumbersGame extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numbers: [],\n            upcomingNumbers: [],\n            target: 0,\n            score: 0,\n            movesRemaining: 0,\n            highlightedOperation: null,\n            highlightedIndex: null,\n            errorMessage: \"\",\n            scoreMessage: \"\",\n            gameOver: false\n        }\n    }\n\n    componentDidMount() {\n        this.restartGame();\n    }\n\n    restartGame = () => {\n        // Set up the initial array for the numbers.\n        var numbersArray = [];\n\n        // Pick 4 single digits.\n        for (var i = 0; i < 4; i++) {\n            numbersArray.push(randomInteger(9, 1, 1));\n        }\n\n        // Also add a low multiple of 5 and 25.\n        numbersArray.push(randomInteger(25, 10, 5));\n        numbersArray.push(randomInteger(100, 25, 25));\n\n        var target;\n\n        do {\n            target = randomInteger(50, 21, 1);\n        } while (numbersArray.includes(target));\n\n        var upcomingNumbers = [1,2,3,4,5,10];\n        shuffleArray(upcomingNumbers);\n\n        this.setState({\n            numbers: numbersArray,\n            upcomingNumbers: upcomingNumbers,\n            target: target,\n            score: 0,\n            movesRemaining: 6,\n            highlightedOperation: null,\n            highlightedIndex: null,\n            errorMessage: \"\",\n            scoreMessage: \"\",\n            gameOver: false\n        });\n    }\n\n    operations = [\"+\", \"-\", \"X\", \"/\"];\n\n    handleNumberClick(clickedIndex) {\n        if (this.state.gameOver) {\n            return;\n        } else if (clickedIndex === this.state.highlightedIndex) {\n            // Clicking same number again cancels.\n            this.setState({highlightedIndex: null});\n        } else if (this.state.highlightedOperation != null && this.state.highlightedIndex != null) {\n            // We have a number and an operation, so make a move.\n            this.makeMove(clickedIndex);\n        } else {\n            // Highlight the number.\n            this.setState({highlightedIndex: clickedIndex});\n        }\n    }\n\n    makeMove = (clickedIndex) => {\n        var firstNumber = this.state.numbers[this.state.highlightedIndex];\n        var secondNumber = this.state.numbers[clickedIndex];\n\n        var createdNumber = this.performOperation(firstNumber, secondNumber);\n\n        if (!createdNumber) {\n            // Error message state set in performOperation\n            return;\n        }\n\n        var newNumbersArray = [...this.state.numbers];\n\n        // Put the new number in where the user clicked.\n        newNumbersArray.splice(clickedIndex, 1, createdNumber);\n\n        // Add a new random number in the used up space.\n        newNumbersArray.splice(this.state.highlightedIndex, 1, this.pickNewRandomNumber());\n\n        var movesRemaining = this.state.movesRemaining - 1\n        this.setState({\n            movesRemaining: movesRemaining,\n            numbers: newNumbersArray,\n            errorMessage: \"\",\n            scoreMessage: \"\",\n            highlightedIndex: null,\n            highlightedOperation: null\n        });\n\n        if (createdNumber === this.state.target) {\n            this.updateTarget();\n        } else if (movesRemaining === 0) {\n            this.endGame();\n        }\n    }\n\n    performOperation = (firstNumber, secondNumber) => {\n        var createdNumber;\n        var errorMessage;\n\n        switch (this.state.highlightedOperation) {\n            case \"+\":\n                createdNumber = firstNumber + secondNumber;\n                break;\n            case \"-\":\n                if (firstNumber > secondNumber) {\n                    createdNumber = firstNumber - secondNumber;\n                } else {\n                    errorMessage = \"Must be a positive number!\";\n                }\n                break;\n            case \"X\":\n                createdNumber = firstNumber * secondNumber;\n                break;\n            case \"/\":\n                if (firstNumber % secondNumber === 0) {\n                    createdNumber = firstNumber / secondNumber;\n                } else {\n                    errorMessage = \"Must be a whole number!\";\n                }\n                break;\n            default:\n                errorMessage = \"Must select an operation!\";\n                break;\n        }\n\n        if (createdNumber > 999999) {\n            // Reject giant numbers because they can't fit sensibly in a box.\n            errorMessage = \"Number is too big!\"\n            createdNumber = null;\n        }\n     \n        if (errorMessage) {\n            this.setState({\n                errorMessage: errorMessage,\n                scoreMessage: \"\",\n                highlightedIndex: null,\n                highlightedOperation: null\n            });\n        }\n\n        return createdNumber;\n    }\n\n    pickNewRandomNumber = () => {\n        var newNumber = this.state.upcomingNumbers.pop();\n\n        if (this.state.upcomingNumbers.length === 0) {\n            this.refillUpcomingArray();\n        }\n\n        return Number(newNumber);\n    }\n\n    refillUpcomingArray = () => {\n        var upcomingNumbers;\n        \n        if (this.state.score < 5) {\n            upcomingNumbers = [1,2,3,4,5,10];\n        } else if (5 <= this.state.score && this.state.score < 10) {\n            upcomingNumbers = [1,2,3,5,8,10,25];\n        } else {\n            upcomingNumbers = [1,2,3,5,8,10,25,100]\n        }\n        shuffleArray(upcomingNumbers);\n\n        this.setState({upcomingNumbers: upcomingNumbers});\n    }\n\n    updateTarget = () => {\n        const minIncrease = 5;\n        const maxIncrease = 10;\n        const baseMin = 30;\n        const baseMax = 60;\n        var min;\n        var max;\n\n        if (this.state.score % 3 === 0) {\n            // Every third target is much larger.\n            min = baseMin + this.state.score ** 2 * minIncrease;\n            max = baseMax + this.state.score ** 2 * maxIncrease;\n        } else {\n            min = baseMin + this.state.score * minIncrease;\n            max = baseMax + this.state.score * maxIncrease;\n        }\n\n        var newTarget;\n\n        do {\n            newTarget = randomInteger(max, min, 1);\n        } while (this.state.numbers.includes(newTarget));\n\n        var bonusMoves = 3;\n\n        this.setState({\n            score: this.state.score + 1,\n            target: newTarget,\n            scoreMessage: \"Target Reached!\",\n            movesRemaining: this.state.movesRemaining + bonusMoves,\n        });\n    }\n\n    endGame = () => {\n        this.setState({gameOver: true});\n    }\n\n    handleOperationClick(operation) {\n        if (this.state.gameOver) {\n            return;\n        }\n\n        if (operation === this.state.highlightedOperation) {\n            this.setState({highlightedOperation: null});\n        } else if (this.state.highlightedIndex !== null) {\n            this.setState({highlightedOperation: operation});\n        }\n    }\n\n    handleCancelClick() {\n        this.setState({highlightedOperation: null, highlightedIndex: null});\n    }\n\n    render() {\n        return (\n            <div className=\"numbers-game-container\">\n                <div className=\"target-container\">\n                    <p className=\"target-container-label\">Target:</p>\n                    <p className=\"target-text\">{this.state.target}</p>\n                </div>\n                <div className=\"number-box-container\">\n                    {this.state.numbers.map((number, index) =>\n                        <div key={\"number-box-\" + index} \n                            className=\"number-box\" onClick={() => { this.handleNumberClick(index) }}\n                            highlighted={index === this.state.highlightedIndex ? \"true\" : null}\n                            smalltext={number > 999 ? \"true\" : null}>\n                            {number}\n                        </div>\n                    )}\n                </div>\n                <div className=\"operation-box-container\">\n                    <div className=\"flex-spacer\"></div>\n                    {this.operations.map((operation, index) =>\n                        <div key={\"operation-box-\" + index} \n                            className=\"operation-box\" onClick={() => { this.handleOperationClick(operation) }}\n                            highlighted={operation === this.state.highlightedOperation ? \"true\" : null}>\n                            {operation}\n                        </div>\n                    )}\n                    <div className=\"cancel-box\" onClick={() => {this.handleCancelClick()}}>    \n                        Cancel\n                    </div>\n                </div>\n                <div className=\"information-container\"> \n                    <div className=\"play-stats\">\n                        <p>Score: {this.state.score}</p>\n                        <p>Moves Remaining: {this.state.movesRemaining}</p>\n                    </div>\n                    <div show={this.state.errorMessage !== \"\" ? \"true\" : null} className=\"error-container\">\n                        <p>{this.state.errorMessage}</p>\n                    </div>\n                    <div show={this.state.scoreMessage !== \"\" ? \"true\" : null} className=\"message-container\">\n                        <p>{this.state.scoreMessage}</p>\n                    </div>\n                    <div show={this.state.gameOver ? \"true\" : null} className=\"endgame-container\">\n                        <p>No more moves!</p>\n                        <button className=\"play-again-button\" onClick={this.restartGame}>Play again?</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NumbersGame;\n","import React, {useState} from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport NumbersGame from './NumbersGame';\nimport NumbersMarkdown from './Numbers.md'\n\nfunction Numbers() {\n  const [markdown, setMarkdown] = useState(\"\");\n  fetch(NumbersMarkdown).then(res => res.text()).then(text => setMarkdown(text));\n\n\n  return (\n    <div>\n      <p className=\"page-title\">Numbers</p>\n      <div>\n        <NumbersGame/>\n      </div>\n      <div className=\"page-section\">\n        <ReactMarkdown source={markdown} />\n      </div>\n    </div>\n  );\n}\n\nexport default Numbers;\n","import React, {useState, useEffect} from 'react';\n\nfunction OnlyConnectTimer({expiredCallback, forceend}) {\n  const maxTime = 180;\n  const [timeTaken, setTimeTaken] = useState(0);\n  const [callbackCalled, setCallbackCalled] = useState(false);\n\n  const timerStyle = {\n    backgroundColor: \"#BBBBBB\",\n    height: \"30px\"\n  }\n\n  var timeUsed = 100 * timeTaken / maxTime;\n  var timeUsedPercentage = timeUsed.toString() + \"%\";\n\n  if (forceend) {\n    timeUsedPercentage = \"100%\";\n  }\n\n  var timerBarStyle = {\n    backgroundColor: \"#0088B3\",\n    width: timeUsedPercentage,\n    height: \"100%\"\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (timeTaken < maxTime) {\n        setTimeTaken(timeTaken + 0.5);\n      } else if (!callbackCalled) {\n        setCallbackCalled(true);\n        expiredCallback();\n      }\n    }, 500);\n  });\n\n  return (\n    <div style={timerStyle}>\n      <div style={timerBarStyle}> </div>\n    </div>\n  );\n}\n\nexport default OnlyConnectTimer;\n","import React from 'react';\nimport './OnlyConnect.css';\n\nfunction OnlyConnectGrid({correctAnswers, remainingAnswers, highlightedAnswers, boxClickHandler}) {\n    var allAnswers = correctAnswers.concat(remainingAnswers);\n\n    var answerGrid = [\n        allAnswers.slice(0, 4),\n        allAnswers.slice(4, 8),\n        allAnswers.slice(8, 12),\n        allAnswers.slice(12),\n    ];\n\n    var rowsCorrect = correctAnswers.length / 4;\n\n    return (\n        <div id='grid' className='only-connect-grid' rowscorrect={rowsCorrect}>\n            {answerGrid.map((row, rowIndex) =>\n                <div\n                    key={\"grid-row-\" + rowIndex} \n                    id={\"grid-row-\" + rowIndex} \n                    className=\"only-connect-grid-row\"\n                    solved={rowIndex < rowsCorrect ? \"true\": null}>\n                    {row.map((boxText, columnIndex) =>\n                        <div\n                            key={\"box-\" + rowIndex + \"-\" + columnIndex} \n                            id={\"box-\" + rowIndex + \"-\" + columnIndex} \n                            className=\"only-connect-grid-box\"\n                            onClick={()=>{boxClickHandler(boxText)}}\n                            highlighted={highlightedAnswers.includes(boxText) ? \"true\" : null}>\n                            {boxText}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default OnlyConnectGrid;","import React from 'react';\nimport './OnlyConnect.css';\nimport { shuffleArray, arraysMatch } from '../DigitalGamesUtils';\nimport OnlyConnectTimer from './OnlyConnectTimer';\nimport OnlyConnectGrid from './OnlyConnectGrid';\n\nclass OnlyConnectGame extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var unsolvedAnswers = props.answers.flat(1);\n        shuffleArray(unsolvedAnswers);\n\n        this.state = {\n            unsolvedAnswers: unsolvedAnswers,\n            solvedAnswers: [],\n            highlightedAnswers: [],\n            answerList: props.answers,\n            message: false,\n            gameOver: false,\n            score: 0\n        }\n    }\n\n    boxClickHandler = (answer) => {\n        if (this.state.gameOver ||\n            this.state.solvedAnswers.indexOf(answer)>= 0) {\n            return;\n        }\n\n        var highlightedAnswerIndex = this.state.highlightedAnswers.indexOf(answer);\n        if (highlightedAnswerIndex >= 0) {\n            this.state.highlightedAnswers.splice(highlightedAnswerIndex, 1);\n        } else {\n            this.state.highlightedAnswers.push(answer);\n        }\n\n        if (this.state.highlightedAnswers.length === 4) {\n            setTimeout(()=> {this.checkAnswers()}, 500);\n        }\n\n        this.setState({\n            highlightedAnswers: this.state.highlightedAnswers,\n            message: null\n        })\n    }\n\n    checkAnswers() {\n        var message;\n        var score = this.state.score;\n\n        var answer = this.findAndPopMatchingAnswer();\n        if (answer) {\n            this.moveHighlightedBoxesToSolved();\n            message = \"Correct!\";\n            score++;\n            if (score === 3) {\n                this.revealAnswers();\n                score++;\n                message = \"Well done! You got all 4 points for the groups. There's another point for getting each connection.\"\n            }\n        } else {\n            message = \"Incorrect! That's not a group.\";\n        }\n\n        this.setState({\n            highlightedAnswers: [],\n            message: message,\n            score: score\n        })\n    }\n\n    findAndPopMatchingAnswer() {\n        for (var i = 0; i < this.state.answerList.length; i++) {\n            if (arraysMatch(this.state.highlightedAnswers, this.state.answerList[i])) {\n                return this.state.answerList.splice(i, 1);\n            }\n        }\n\n        return null;\n    }\n\n    moveHighlightedBoxesToSolved() {\n        for (var i = 0; i < this.state.highlightedAnswers.length; i++) {\n            var answer = this.state.highlightedAnswers[i];\n            this.state.solvedAnswers.push(answer);\n\n            var answerIndex = this.state.unsolvedAnswers.indexOf(answer);\n            this.state.unsolvedAnswers.splice(answerIndex, 1);\n        }\n    }\n\n    revealAnswers() {\n        setTimeout(()=> {\n            this.setState({\n                solvedAnswers: this.state.solvedAnswers.concat(this.state.answerList.flat()),\n                unsolvedAnswers: [],\n                gameOver: true\n            })\n        }, 500);\n    }\n\n    timerExpires = () => {\n        var pointsString = this.state.score + (this.state.score === 1 ? \" point\" : \" points\");\n\n        this.setState({\n            highlightedAnswers: [],\n            gameOver: true,\n            message: \"You're out of time! That's \" + pointsString + \" for the groups. Remember, there's a bonus point for getting the connections.\"\n        })\n\n        this.revealAnswers();\n    }\n\n    render() {\n        return (\n            <div className=\"only-connect-game-container\">\n                <OnlyConnectGrid \n                    correctAnswers={this.state.solvedAnswers} remainingAnswers={this.state.unsolvedAnswers}\n                    highlightedAnswers={this.state.highlightedAnswers} boxClickHandler={this.boxClickHandler}/>\n                <OnlyConnectTimer forceend={this.state.gameOver} expiredCallback={this.timerExpires}/>\n                <div className=\"only-connect-message-box\">\n                    {this.state.message}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OnlyConnectGame;\n","import React, { useState } from 'react';\nimport './OnlyConnect.css';\nimport OnlyConnectGame from './OnlyConnectGame';\n\nfunction OnlyConnectApp() {\n    const [puzzle, setPuzzle] = useState(null);\n\n    const testPuzzle = [\n        [\"Apple\", \"Adam\", \"Ants\", \"Anorak\"],\n        [\"Banana\", \"Badger\", \"Bert\", \"Basic\"],\n        [\"Cave\", \"Coast\", \"Cliff\", \"Container\"],\n        [\"Day\", \"Dessert\", \"Dave\", \"Depot\"]\n    ];\n    \n    const buttonClick = (puzzle) => {\n        setPuzzle(puzzle);\n    }\n\n    var content;\n\n    if (puzzle) {\n        content = <OnlyConnectGame answers={puzzle}/>\n    } else {\n        content = <div className=\"only-connect-intro-page\">\n            <p className=\"only-connect-intro-title\">Only Connect Wall Round!</p>\n            <p className=\"only-connect-intro-text\">When your whole team can see your screen and is ready, click start to begin!</p>\n            <button className=\"only-connect-start-button\" onClick={()=>{buttonClick(testPuzzle)}}>Start</button>\n        </div>\n    }\n    return (\n        <div className=\"only-connect-app-container\">\n            {content}\n        </div>\n    );\n  }\n\n\nexport default OnlyConnectApp;\n","import React, {useState} from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport OnlyConnectApp from './OnlyConnectApp';\nimport OnlyConnectMarkdown from './OnlyConnect.md';\n\nfunction OnlyConnect() {\n  const [markdown, setMarkdown] = useState(\"\");\n  fetch(OnlyConnectMarkdown).then(res => res.text()).then(text => setMarkdown(text));\n\n  return (\n    <div>\n      <p className=\"page-title\">Only Connect Wall</p>\n      <div>\n        <OnlyConnectApp/>\n      </div>\n      <div className=\"page-section\">\n        <ReactMarkdown source={markdown} />\n      </div>\n    </div>\n  );\n}\n\nexport default OnlyConnect;\n","import React from 'react';\n\nfunction Hexagon(props) {\n  return (\n    <div\n        key={\"hex-\" + props.hex.row + \"-\" + props.hex.index} \n        id={\"hex-\" + props.hex.row + \"-\" + props.hex.index} \n        className=\"hexagon\"\n        hexstate={props.hex.state}>\n        <span>{props.hex.value}</span>\n        <svg className=\"hexagonSvg\" viewBox=\"0 0 174 200\">\n          <polyline points=\"87,0 174,50 174,150 87,200 0,150 0,50 87,0\"/>\n        </svg>\n    </div>\n  );\n}\n\nexport default Hexagon;\n","import React from 'react';\nimport './PocketHexes.css';\nimport Hexagon from './Hexagon';\n\nconst hexStates = {\n    EMPTY: \"empty\",\n    PLACABLE: \"placable\",\n    PLACED: \"placed\",\n    SCORABLE: \"scorable\",\n    UNSCORABLE: \"unscorable\",\n    SCORED: \"scored\"\n};\n\nclass PocketHexesGame extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            score: 0,\n            scoredThisRound: false,\n            diceToPick: 3,\n            diceRolls: this.generateDiceRolls(),\n            selectedDice: null,\n            grid: this.createGrid()\n        }\n    }\n\n    createGrid() {\n        var grid = [];\n\n        grid.push(this.createRow(0, 0, 5));\n        grid.push(this.createRow(1, 0, 6));\n        grid.push(this.createRow(2, 0, 7));\n        grid.push(this.createRow(3, 0, 8));\n        grid.push(this.createRow(4, 0, 9));\n        grid.push(this.createRow(5, 1, 8));\n        grid.push(this.createRow(6, 2, 7));\n        grid.push(this.createRow(7, 3, 6));\n        grid.push(this.createRow(8, 4, 5));\n\n        var centerHex = grid [4][4];\n        centerHex.value = 1;\n        centerHex.state = hexStates.PLACED;\n\n        return grid;\n    }\n\n    createRow(rowNumber, startIndex, length) {\n        var row = [];\n\n        for (var i = 0; i < length; i++) {\n            row.push(this.createHex(rowNumber, i + startIndex));\n        }\n\n        return row;\n    }\n\n    createHex(row, index) {\n        var hex = {\n            value: null,\n            state: hexStates.EMPTY,\n            row: row,\n            index: index\n        };\n\n        return hex;\n    }\n\n    handleSelectHex(hex) {\n        if (!this.state.scoredThisRound && hex.state === hexStates.SCORABLE) {\n            // Score this hex.\n            hex.state = hexStates.SCORED;\n            this.setState({\n                score: this.state.score + hex.value,\n                scoredThisRound: true\n            });\n            this.updateHexes();\n        } else if (hex.state === hexStates.PLACABLE) {\n            // Place a value in this hex.\n            hex.value = this.state.diceRolls[this.state.selectedDice];\n            hex.state = hexStates.PLACED;\n            this.spendDice();\n            this.updateHexes();\n        }\n    }\n\n    updateHexes(valueToPlace) {\n        for (var rowIndex = 0; rowIndex < this.state.grid.length; rowIndex++) {\n            for (var hexIndex = 0; hexIndex < this.state.grid[rowIndex].length; hexIndex++) {\n                var hex = this.state.grid[rowIndex][hexIndex];\n                \n                switch (hex.state) {\n                    case hexStates.EMPTY:\n                        // May be placeable\n                        if (valueToPlace !== null) {\n                            this.updateHexForPlacable(hex, valueToPlace);\n                        }\n                        break;\n                    case hexStates.PLACABLE:\n                        if (valueToPlace === undefined) {\n                            // Chose not to place- clear old data.\n                            hex.state = hexStates.EMPTY;\n                        } \n                        break;\n                    case hexStates.PLACED:\n                        // Check if the hex can be scored.\n                        this.updateHexForScorable(hex);\n                        break;\n                    case hexStates.SCORABLE:\n                        // Missed opportunity for scoring.\n                        hex.state = hexStates.UNSCORABLE;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    updateHexForScorable(hex) {\n        var adjList = this.getAdjacentHexes(hex);\n    \n        if (adjList.length < 6) {\n            // Edge hexes can never be scored.\n            hex.state = hexStates.UNSCORABLE;\n            return;\n        }\n       \n        for (var i = 0; i < adjList.length; i++) {\n            if (adjList[i].state === hexStates.EMPTY || adjList[i].state === hexStates.PLACABLE) {\n                // Found an adjacent empty hex, can't be scored yet.\n                return;\n            }\n        }\n\n        if (this.state.scoredThisRound) {\n            hex.state = hexStates.UNSCORABLE;\n        } else {\n            hex.state = hexStates.SCORABLE;\n        }\n    }\n\n    updateHexForPlacable(hex, valueToPlace) {\n        if (valueToPlace === 0) {\n            //0 can go anywhere.\n            hex.state = hexStates.PLACABLE;\n            return;\n        }\n\n        var highestAdjValue = this.getHighestAdjValue(hex);\n        if (valueToPlace === 1) {\n            //1 can go anywhere not next to another value\n            if (highestAdjValue === null) {\n                hex.state = hexStates.PLACABLE;\n            }       \n            return;\n        }\n\n        if (highestAdjValue !== null && valueToPlace >= highestAdjValue) {\n            //Other numbers can only go next to lower values.\n            hex.state = hexStates.PLACABLE;\n        }\n    }\n\n    getHighestAdjValue(hex) {\n        var adjHexes = this.getAdjacentHexes(hex);\n        var highestAdjValue = null;\n\n        for (var i = 0; i < adjHexes.length; i++) {\n            var adjHex = adjHexes[i];\n\n            if (adjHex.value === null) {\n                continue;\n            } else {\n                highestAdjValue = Math.max(adjHex.value, highestAdjValue);\n            }\n        }\n\n        return highestAdjValue;\n    }\n\n    getAdjacentHexes(targetHex) {\n        var adjHexes = [];\n\n        /* The hex grid indexing is tricky. Imagine the Y axis is tilted by 30 degrees clockwise.\n        * So, the first five rows start indexing hexes at 0, as expected.\n        * For later rows, the row size is decreasing, so the sixth row doesn't have a hex at 0.\n        * The seventh row is missing a hex at 0 and 1, and so forth.\n        * \n        * As a result, we'll need to look at each hex's index property defined during setup, and\n        * can't rely on the index in the array.\n        */\n\n        // First, try and get hexes on the same row.\n        var sameRow = this.state.grid[targetHex.row];\n        var i;\n        for (i = 0; i < sameRow.length; i++) {\n            var sameRowHex = sameRow[i];\n\n            if (sameRowHex.index === targetHex.index - 1) {\n                adjHexes.push(sameRowHex);\n            } else if (sameRowHex.index === targetHex.index + 1) {\n                adjHexes.push(sameRowHex);\n            } \n        }\n\n        // Now look at the row above.\n        if (targetHex.row !== 0) {\n            var rowAbove = this.state.grid[targetHex.row - 1];\n\n            for (i = 0; i < rowAbove.length; i++) {\n                var rowAboveHex = rowAbove[i];\n    \n                if (rowAboveHex.index === targetHex.index - 1) {\n                    adjHexes.push(rowAboveHex);\n                } else if (rowAboveHex.index === targetHex.index) {\n                    adjHexes.push(rowAboveHex);\n                } \n            }\n        }\n\n        // Now look at the row below.\n        if (targetHex.row !== this.state.grid.length - 1) {\n            var rowBelow = this.state.grid[targetHex.row + 1];\n\n            for (i = 0; i < rowBelow.length; i++) {\n                var rowBelowHex = rowBelow[i];\n    \n                if (rowBelowHex.index === targetHex.index) {\n                    adjHexes.push(rowBelowHex);\n                } else if (rowBelowHex.index === targetHex.index + 1) {\n                    adjHexes.push(rowBelowHex);\n                } \n            }\n        }\n\n        return adjHexes;\n    }\n\n    handleSelectDice(index) {\n        if (this.state.diceToPick === 0) {\n            return;\n        }\n\n        this.updateHexes(this.state.diceRolls[index]);\n        this.setState({selectedDice: index});\n    }\n\n    spendDice() {\n        this.state.diceRolls[this.state.selectedDice] = null;\n        this.setState({\n            selectedDice: null,\n            diceToPick: parseInt(this.state.diceToPick) - 1\n        });\n    }\n\n    generateDiceRolls() {\n        var diceList = [4, 6, 8, 10, 12, 20];\n        var newDiceRolls = [];\n        \n        for (var i = 0; i < diceList.length; i++) {\n            var diceMax = diceList[i];\n            var diceResult = Math.ceil(Math.random() * diceMax);\n            if (diceMax == 10) {\n                diceResult--;\n            }\n            newDiceRolls.push(diceResult);\n        }\n\n        return newDiceRolls;\n    }\n\n    rollDice() {\n        if (this.state.diceToPick > 0) {\n            return;\n        }\n\n        this.updateHexes();\n        \n        var newDiceRolls = this.generateDiceRolls();\n        \n        this.setState({\n            diceRolls: newDiceRolls,\n            diceToPick: 3,\n            scoredThisRound: false\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"pocket-hexes-game-container\">\n                <span className=\"score\">Total score: {this.state.score}</span>\n                <div id='grid' className='grid'>\n                    {this.state.grid.map((row, index) =>\n                        <div key={\"row-\" + index} className=\"row\">\n                            {row.map((hex, jndex) => <div onClick={() => { this.handleSelectHex(hex) }}>\n                                <Hexagon hex={hex}/>\n                            </div>)}\n                        </div>\n\n                    )}\n                </div>\n                <div id='rolls' className='rolls'>\n                    {this.state.diceRolls.map((roll, index) =>\n                        <div key={\"rollBox-\" + index} \n                            id={\"rollBox-\" + index} \n                            className=\"rollBox\" onClick={() => { this.handleSelectDice(index) }}\n                            highlighted={index === this.state.selectedDice ? \"true\" : null}>\n                            {roll}\n                        </div>\n                    )}\n                    <button className='rollButton' onClick={() => {this.rollDice()}}>\n                        {this.state.diceToPick > 0 ? \"Dice: \" + this.state.diceToPick : \"Roll!\"}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PocketHexesGame;\n","import React, {useState} from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport PocketHexesGame from './PocketHexesGame';\nimport PocketHexesMarkdown from './PocketHexes.md';\n\nfunction PocketHexes() {\n  const [markdown, setMarkdown] = useState(\"\");\n  fetch(PocketHexesMarkdown).then(res => res.text()).then(text => setMarkdown(text));\n\n  return (\n    <div>\n      <p className=\"page-title\">Pocket Hexes</p>\n      <div>\n        <PocketHexesGame/>\n      </div>\n      <div className=\"page-section\">\n        <ReactMarkdown source={markdown} />\n      </div>\n    </div>\n  );\n}\n\nexport default PocketHexes;\n","import React from 'react';\nimport Numbers from \"./Numbers/Numbers\";\nimport OnlyConnect from \"./OnlyConnect/OnlyConnect\";\nimport {\n  useParams\n} from \"react-router-dom\";\nimport PocketHexes from './PocketHexes/PocketHexes';\n\nfunction DigitalGamesDetails() {\n  let { name } = useParams();\n\n  const pages = {\n    \"numbers\": <Numbers/>,\n    \"pocket-hexes\": <PocketHexes/>,\n    \"only-connect\": <OnlyConnect/>\n  } \n\n  var content = <div>Invalid URL: The page for {name} doesn't exist.</div>;\n\n  if (pages[name] != null) {\n    content = pages[name];\n  }\n\n  return (\n    <div className=\"page-content\">\n        {content}\n    </div>\n  );\n}\n\nexport default DigitalGamesDetails;\n","import React from 'react';\n\nfunction Contact() {\n  return (\n    <div className=\"page-content\">\n      <p className=\"page-title\">Contact</p>\n      <div className=\"page-section\">\n        <p>If you have questions about any of my games, feel free to get in touch with me.</p>\n        <p>Twitter: @WSGameDesign</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Menu from './components/Menu';\nimport About from './pages/About';\nimport BoardGamesIndex from './pages/boardGames/BoardGamesIndex';\nimport BoardGamesDetails from './pages/boardGames/BoardGamesDetails';\nimport DigitalGamesIndex from './pages/digitalGames/DigitalGamesIndex';\nimport DigitalGamesDetails from './pages/digitalGames/DigitalGamesDetails';\nimport Contact from './pages/Contact';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"main-page\">\n      <Header/>\n      <Router>\n        <Menu/>\n        <div className=\"main-content\">\n          <Switch>\n            <Route exact path=\"/board-games\">\n              <BoardGamesIndex/>\n            </Route>\n            <Route path=\"/board-games/:name\">\n              <BoardGamesDetails/>\n            </Route>\n            <Route exact path=\"/digital-games\">\n              <DigitalGamesIndex/>\n            </Route>\n            <Route path=\"/digital-games/:name\">\n              <DigitalGamesDetails/>\n            </Route>\n            <Route path=\"/contact\">\n              <Contact/>\n            </Route>\n            <Route path=\"/\">\n              <About/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Pyxis.c67cadf1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Background.be79be34.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/profilePhoto.c6179942.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herakles.d5add04a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TheVinylAge.6a5d93d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/InternsOfHades.2f156d4f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/RulesInc.2fe16e90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herakles.a9476b69.md\";","module.exports = __webpack_public_path__ + \"static/media/TheVinylAge.194b6615.md\";","module.exports = __webpack_public_path__ + \"static/media/Pyxis.64fd2218.md\";","module.exports = __webpack_public_path__ + \"static/media/RulesInc.f7f02f9a.md\";","module.exports = __webpack_public_path__ + \"static/media/InternsOfHades.a7fc08c1.md\";","module.exports = __webpack_public_path__ + \"static/media/Numbers.e820be7a.md\";","module.exports = __webpack_public_path__ + \"static/media/OnlyConnect.09b6ca99.md\";","module.exports = __webpack_public_path__ + \"static/media/PocketHexes.09b6ca99.md\";"],"sourceRoot":""}